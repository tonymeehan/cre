rules:
- cre:
    id: CRE-2025-0031
    severity: 2
    title: Django returns DisallowedHost error for untrusted HTTP_HOST headers
    category: framework-problem
    author: Prequel
    description: |
      - Django applications may return a "DisallowedHost" error when receiving requests with an unrecognized or missing Host header. This typically occurs in production environments where reverse proxies, load balancers, or external clients send requests using an unexpected domain or IP address. Django blocks these requests unless the domain is explicitly listed in `ALLOWED_HOSTS`.
    cause: |  
      - The error is raised when the HTTP request contains a Host header not present in the Django `ALLOWED_HOSTS` setting. This is a security measure to prevent HTTP Host header attacks and request spoofing.
    tags:
      - django
      - disallowedhost
      - configuration
      - web
      - security
      - host-header
    mitigation: |
      - Add the incoming domain, IP address, or wildcard pattern to `ALLOWED_HOSTS` in your Django settings. 
      - For example: 
      ```python 
      ALLOWED_HOSTS = ['example.com', 'www.example.com', '127.0.0.1'] 
      ```
      - During development, you can use:
      ```python  
      ALLOWED_HOSTS = ['*']\n  
      ```\n  
      - Note: This is insecure for production. 
      - For applications behind a load balancer or ingress, ensure it forwards the correct Host header.\n"
    references:
      - https://docs.djangoproject.com/en/stable/ref/settings/#allowed-hosts
      - https://stackoverflow.com/questions/40582423/how-to-fix-django-error-disallowedhost-at-invalid-http-host-header-you-m
      - https://docs.djangoproject.com/en/stable/topics/security/#host-header-validation
    applications:
      - name: django
        version: ">= 1.10"
        containerName: web
    impact: Errors
    impactScore: 5
    mitigationScore: 5
    reports: 20
  metadata:
    kind: rules
    id: Gp1HahcjfikrG2FPAuGjMf 
    gen: 1
  rule:
    set:
      event:
        source: cre.log.django
      window: 5s
      match:
      - regex: 'django.security.DisallowedHost: Invalid HTTP_HOST header.*'
      - value: "django/core/handlers"
