rules:
- cre:
    id: CRE-2025-0042
    severity: 4
    title: PostgreSQL transaction fails with deadlock detected error in psycopg2 and Django
    category: database-problem
    author: Prequel
    description: | 
      - Applications using Django with PostgreSQL and psycopg2 may encounter `deadlock detected` errors under concurrent write-heavy workloads.
      - PostgreSQL raises this error when two or more transactions block each other cyclically while waiting for locks, and one must be aborted.
      - Django surfaces this as an `OperationalError`, and the affected transaction is rolled back.
    cause: | 
      - A deadlock occurs when multiple transactions acquire locks in different orders, causing a cycle that PostgreSQL''s deadlock detector resolves by aborting one transaction. This is more likely during bulk inserts, updates with overlapping WHERE clauses, or transactions accessing rows in inconsistent order.
    tags:
      - postgres
      - psycopg2
      - django
      - transaction
      - deadlock
      - operational error
      - known-issue
    mitigation: "- Ensure that transactions access rows in a consistent order across code paths.\n- Break large transactions into smaller units of work.\n- Use explicit `select_for_update()` to control locking behavior and reduce contention.\n- Monitor PostgreSQL\u2019s `pg_stat_activity` and `pg_locks` to detect deadlock-prone queries.\n"
    references:
      - https://www.postgresql.org/docs/current/errcodes-appendix.html
      - https://docs.djangoproject.com/en/stable/ref/models/querysets/#select-for-update
    applications:
      - name: django
        version: ">= 3.0"
        containerName: web
    impact: One or more transactions rolled back due to database lock contention
    impactScore: 7
    mitigationScore: 5
    reports: 11
  metadata:
    kind: rules
    id: T98zGijpsSRos7inkTXymv
    gen: 1
  rule:
    set:
      event:
        source: cre.log.django
      window: 5s
      match:
        - regex: '.*psycopg2\.errors\.DeadlockDetected: deadlock detected.*'
        - regex: '.*django\.db\.utils\.OperationalError: deadlock detected.*'
